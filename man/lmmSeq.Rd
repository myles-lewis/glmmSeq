% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lmmSeq.R
\name{lmmSeq}
\alias{lmmSeq}
\title{Linear mixed models for data matrix}
\usage{
lmmSeq(
  modelFormula,
  maindata,
  metadata,
  id = NULL,
  offset = NULL,
  test.stat = c("Wald", "F", "LRT"),
  reduced = NULL,
  modelData = NULL,
  designMatrix = NULL,
  control = lmerControl(),
  cores = 1,
  removeSingles = FALSE,
  verbose = TRUE,
  returnList = FALSE,
  progress = FALSE,
  ...
)
}
\arguments{
\item{modelFormula}{the model formula. This must be of the form \code{"~ ..."}
where the structure is assumed to be \code{"gene ~ ..."}. The formula must
include a random effects term. See formula structure for random effects in
\code{\link[lme4:lmer]{lme4::lmer()}}}

\item{maindata}{data matrix with genes in rows and samples in columns}

\item{metadata}{a dataframe of sample information with variables in columns
and samples in rows}

\item{id}{Optional. Used to specify the column in metadata which contains the
sample IDs to be used in repeated samples for random effects. If not
specified, the function defaults to using the variable after the "|" in the
random effects term in the formula.}

\item{offset}{Vector containing model offsets (default = NULL). If provided
the \code{lmer()} offset is set to \code{offset}. See
\code{\link[lme4:lmer]{lme4::lmer()}}}

\item{test.stat}{Character value specifying test statistic. Current options
are "Wald" for type 2 Wald Chi square test using code derived and modified
from \link[car:Anova]{car::Anova} to improve speed for matrix tests. Or "F" for conditional
F tests using Saiterthwaite's method of approximated Df. This uses
\link[lmerTest:lmer]{lmerTest::lmer} and is somewhat slower.}

\item{reduced}{Optional reduced model formula. If this is chosen, a
likelihood ratio test is used to calculate p-values instead of the default
Wald type 2 Chi-squared test.}

\item{modelData}{Optional dataframe. Default is generated by call to
\code{expand.grid} using levels of variables in the formula. Used to calculate
model predictions (estimated means & 95\% CI) for plotting via \link{modelPlot}.
It can therefore be used to add/remove points in \link{modelPlot}.}

\item{designMatrix}{Optional custom design matrix generated by call to
\code{model.matrix} using \code{modelData} and \code{FEformula}. Used to calculate
model predictions for plotting.}

\item{control}{the \code{lmer} optimizer control (default = \code{lmerControl()}). See
\code{\link[lme4:lmerControl]{lme4::lmerControl()}}.}

\item{cores}{number of cores to use for parallelisation. Default = 1.}

\item{removeSingles}{whether to remove individuals with no repeated measures
(default = FALSE)}

\item{verbose}{Logical whether to display messaging (default = TRUE)}

\item{returnList}{Logical whether to return results as a list or lmmSeq
object (default = FALSE). Helpful for debugging.}

\item{progress}{Logical whether to display a progress bar}

\item{...}{Other parameters passed to
\code{\link[lmerTest:lmer]{lmerTest::lmer()}}. Only available if
\code{test.stat = "F"}.}
}
\value{
Returns an S4 class \code{lmmSeq} object with results for gene-wise linear
mixed models; or a list of results if \code{returnList} is \code{TRUE}, which is
useful for debugging. If all genes return errors from \code{lmer}, then an error
message is shown and a character vector containing error messages for all
genes is returned.
}
\description{
Fits many linear mixed effects models for analysis of gaussian data with
random effects, with parallelisation and optimisation for speed. It is
suitable for longitudinal analysis of high dimensional data. Wald type 2
Chi-squared test is used to calculate p-values.
}
\details{
By default, p-values for each model term are computed using Wald type 2
Chi-squared test as per \code{\link[car:Anova]{car::Anova()}}. The underlying code for this has been
optimised for speed. However, if a reduced model formula is specified by
setting \code{reduced}, then a likelihood ratio test (LRT) is performed instead
using \code{\link[lme4:anova.merMod]{anova}}. This will double computation
time since two LMM have to be fitted for each gene. For LRT, models being
compared are optimised by maximum likelihood and not REML (\code{REML=FALSE}).

Two key methods are used to speed up computation above and beyond simple
parallelisation. The first is to speed up \code{\link[lme4:lmer]{lme4::lmer()}} by calling
\code{\link[lme4:modular]{lme4::lFormula()}} once at the start and then updating the \code{lFormula} output
with new data. The 2nd speed up is through optimised code for repeated type 2
Wald Chi-squared tests (original code was derived from \link[car:Anova]{car::Anova}). For
example, elements such as the hypothesis matrices are generated only once to
reduce unnecessarily repetitive computation, and the generation of p-values
from Chi-squared values is vectorised and performed at the end. F-tests using
the \code{lmerTest} package have not been optimised and are therefore slower.

Parallelisation is performed using \link[parallel:mclapply]{parallel::mclapply} on unix/mac and
\link[parallel:clusterApply]{parallel::parLapply} on windows. Progress bars use \link[pbmcapply:pbmclapply]{pbmcapply::pbmclapply}
on unix/mac and \link[pbapply:pbapply]{pbapply::pblapply} on windows.

The \code{id} argument is usually optional. By default the \code{id} column in the
metadata is determined as the term after the bar in the random effects term
of the model. Note that \code{id} is not passed to \code{lmer}. It is only really used
to remove singletons from the \code{maindata} matrix and \code{metadata} dataframe. The
\code{id} is also stored in the output from \code{lmmSeq} and used by plotting function
\code{\link[=modelPlot]{modelPlot()}}. However, due to its flexible nature, in theory \code{lmmSeq} should
allow for more than one random effect term, although this has not been tested
formally. In this case, it is probably prudent to specify a value for \code{id}.
}
\examples{
data(PEAC_minimal_load)
logtpm <- log2(tpm +1)
lmmtest <- lmmSeq(~ Timepoint * EULAR_6m + (1 | PATID),
                     maindata = logtpm[1:2, ],
                     metadata = metadata,
                     verbose = FALSE)
names(attributes(lmmtest))
}
